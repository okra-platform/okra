version: "3"

env:
  LOG_LEVEL: "debug"

tasks:
  run:
    desc: Runs the main application and supports passing CLI args
    cmds:
      - go run *.go {{ .CLI_ARGS }}
    silent: false

  build:
    desc: Builds the backend binary
    cmds:
      - goreleaser build --snapshot --clean

  test:
    desc: Runs all go tests using gotestsum - supports passing gotestsum args
    cmds:
      - gotestsum {{ .CLI_ARGS }} ./...

  test:unit:
    desc: Runs only unit tests (excludes integration tests)
    cmds:
      - go test -short {{ .CLI_ARGS }} ./...
    env:
      SKIP_INTEGRATION: "true"

  test:watch:
    desc: Runs all go tests using gotestsum in watch mode
    cmds:
      - gotestsum --watch -- -v ./...

  coverage:
    desc: Runs all go tests with -race flag and generates a coverage report
    cmds:
      - go test -race -coverprofile=coverage.out -covermode=atomic ./... -v -cover
    silent: true

  tidy:
    desc: Runs go mod tidy on the backend
    cmds:
      - go mod tidy

  lint:
    desc: Runs golangci-lint
    cmds:
      - golangci-lint run ./...

  pr:
    desc: Runs all go test and lint related tasks for PRs
    cmds:
      - task: tidy
      - task: lint
      - task: test

  build:test-wasm:
    desc: Build the math-service test fixture WASM using TinyGo
    dir: internal/wasm/fixture/math-service
    cmds:
      - tinygo build -o math-service.wasm -target wasi -scheduler=none -gc=conservative -opt=2 -no-debug .

  proto:gen-runtime-types:
    desc: Generate Go code from protobuf definitions for runtime types
    cmds:
      - buf generate internal/runtime/pb/runtime.proto
    preconditions:
      - sh: command -v buf
        msg: "buf is required but not installed. Visit https://buf.build/docs/installation for installation instructions."
      - sh: command -v protoc-gen-go
        msg: "protoc-gen-go is required but not installed. Run: go install google.golang.org/protobuf/cmd/protoc-gen-go@latest"

  test:okra-dev:
    desc: Run integration test for okra dev command
    cmds:
      - echo "Building and installing okra CLI..."
      - go install .
      - echo "Running okra dev integration test..."
      - go test -v -tags=integration -timeout=60s ./test/integration/dev/...
    preconditions:
      - sh: command -v tinygo
        msg: "tinygo is required for building WASM. Visit https://tinygo.org/getting-started/install/ for installation instructions."
      - sh: command -v buf
        msg: "buf is required but not installed. Visit https://buf.build/docs/installation for installation instructions."

  test:okra-serve:
    desc: Run integration test for okra serve command
    cmds:
      - echo "Building and installing okra CLI..."
      - go install .
      - echo "Running okra serve integration test..."
      - go test -v -tags=integration -timeout=60s ./test/integration/serve/...
    preconditions:
      - sh: command -v tinygo
        msg: "tinygo is required for building WASM. Visit https://tinygo.org/getting-started/install/ for installation instructions."
      - sh: command -v buf
        msg: "buf is required but not installed. Visit https://buf.build/docs/installation for installation instructions."
