# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com
version: 2
before:
  hooks:
    - go mod tidy

builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm
      - arm64
    goarm:
      - "7"

archives:
  - formats: [tar.gz]
    # this name template makes the OS and Arch compatible with the results of uname.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        formats: [zip]

checksum:
  name_template: "checksums.txt"

snapshot:
  version_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"


brews:
  - repository:
      owner: ""
      name: "homebrew-"
    description: "Open-source backend platform for building services, agentic workflows, and distributed systemsâ€”simple, observable, and fun."
    license: "Apache Software License 2.0"
    dependencies:
      - name: go
        type: optional
      - name: git
    test: |
      system "#{bin}/okra version"



dockers:
  - use: buildx
    goos: linux
    goarch: arm
    goarm: 7
    image_templates:
      - "ghcr.io:v{{ .Version }}-armv7"
      - "ghcr.io:latest-armv7"
    build_flag_templates:
      - "--platform=linux/arm/v7"
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version=v{{.Version}}"

  - use: buildx
    goos: linux
    goarch: arm64
    image_templates:
      - "ghcr.io:v{{ .Version }}-arm64"
      - "ghcr.io:latest-arm64"
    build_flag_templates:
      - "--platform=linux/arm64"
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version=v{{.Version}}"

  - use: buildx
    goos: linux
    goarch: amd64
    image_templates:
      - "ghcr.io:v{{ .Version }}-amd64"
      - "ghcr.io:latest-amd64"
    build_flag_templates:
      - "--platform=linux/amd64"
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version=v{{.Version}}"

docker_manifests:
  - name_template: "ghcr.io:v{{ .Version }}"
    image_templates:
      - "ghcr.io:v{{ .Version }}-amd64"
      - "ghcr.io:v{{ .Version }}-arm64"
      - "ghcr.io:v{{ .Version }}-armv7"
  - name_template: "ghcr.io:latest"
    image_templates:
      - "ghcr.io:latest-amd64"
      - "ghcr.io:latest-arm64"
      - "ghcr.io:latest-armv7"


#
#--------------------------------------------------------------------------------------------------
# Meta
#
# The lines beneath this are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
